@model IndexData

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recruterra - Сводка</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/erik.css">
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="shortcut icon" type="image/x-icon" href="~/images/recruterra.png" />
    <script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
    <script src="~/js/script.js" charset="utf-8"></script>
</head>
<body>
    <main>
        <header>
            <nav class="navbar navbar-expand-lg">
                <a class="navbar-brand" href="/Home/Index/@Model.User.Id">Recruterra</a> 
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link under-line color-green font-bold" href="/Home/Index/@Model.User.Id">Сводка</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link font-bold" href="/Home/Vacancy/@Model.User.Id">Вакансии</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link font-bold" href="/Home/Meeting/@Model.User.Id">Встречи</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link font-bold" href="/Home/Resume/@Model.User.Id">Базы резюме</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link font-bold" href="/Home/Article/@Model.User.Id">Сообщество</a>
                    </li>
                </ul>
                
                <div class="text-end">
                    @if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id) == null)
                    {
                        <a class="btn btn-outline-dark me-2" href="/Home/Signin">Войти</a>
                    }
                    else if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id).Auth == 0)
                    {
                        <a class="btn btn-outline-dark me-2" href="/Home/Signin">Войти</a>
                    }
                    else if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id).Auth == 1)
                    {
                        <a class="font16 mrright16" title="Логин" href="/Home/Account/@Model.User.Id" name="">@Model.User.Login</a>
                        <a class="font16 mrright16" title="Роль" href="/Home/Account/@Model.User.Id" name="">@Model.User.Role</a>
                        <input type="button" title="Выйти из аккаунта" class="btn btn-outline-dark me-2" onclick="UpdateAccount('@Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id).Id')" value="Выйти" />
                    }
                </div>
            </nav>
        </header>
        <div class="container">
            <div class="leftbar">
                <div class="openvakansii">
                    <a class="opvacancy-text" href="/Home/Vacancy/@Model.User.Id">Открытые вакансии</a>
                </div>
                <a href="/Home/Vacancy/@Model.User.Id"><img class="strelka" src="~/images/strelka.png" alt="Перейти" title="Перейти в вакансии"></a>

                <div class="allvacancyback">
                    <div class="vacancy1back" title="@Model.Vacancies.FirstOrDefault(m => m.Id == 1).Position — @Model.Vacancies.FirstOrDefault(m => m.Id == 1).Description — @Model.Vacancies.FirstOrDefault(m => m.Id == 1).Education образование.">
                        <div class="left">
                            <div class="vacancy1name">
                                <p class="vacancyname-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 1).Position</p>
                            </div>
                            <div class="stroka1">
                                <div class="vacancy1workexperience">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 1).WorkExperience @Model.GetYearNameInRussian(Model.Vacancies.FirstOrDefault(m => m.Id == 1).WorkExperience)</p>
                                </div>
                                <div class="vacancy1typeofemployment">
                                    <p class="vacancyinfo-text">@Model.GetTypeOfEmployment(Model.Vacancies.FirstOrDefault(m => m.Id == 1).IdTypeOfEmployment) занятость</p>
                                </div>
                            </div>
                            <div class="stroka2">
                                <div class="vacancy1adddate">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 1).Salary руб.</p>
                                </div>
                                <div class="vacancy1companyname">
                                    <p class="vacancyinfo-text">@Model.Employers.FirstOrDefault(employer => employer.Id == (Model.Vacancies.FirstOrDefault(m => m.Id == 1).IdEmployer)).City.Name</p>
                                </div>
                            </div>
                        </div>
                        <div class="right">
                            <div class="btnaddresponse">
                                <form method="post">
                                    <p>
                                        @if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id) != null)
                                        {
                                            if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id).Auth != 0 && Model.User.Role == "Соискатель")
                                            {
                                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == 1) == null)
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="CreateResponse('@Model.User.Id', '1');HappyMassage();" value="Откликнуться" />
                                                }
                                                else
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="Message()" value="Откликнуться" />
                                                }
                                            }
                                        }
                                    </p>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="vacancy2back" title="@Model.Vacancies.FirstOrDefault(m => m.Id == 2).Position — @Model.Vacancies.FirstOrDefault(m => m.Id == 2).Description — @Model.Vacancies.FirstOrDefault(m => m.Id == 2).Education образование.">
                        <div class="left">

                            <div class="vacancy1name">
                                <p class="vacancyname-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 2).Position</p>
                            </div>
                            <div class="stroka1">
                                <div class="vacancy1workexperience">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 2).WorkExperience @Model.GetYearNameInRussian(Model.Vacancies.FirstOrDefault(m => m.Id == 2).WorkExperience)</p>
                                </div>
                                <div class="vacancy1typeofemployment">
                                    <p class="vacancyinfo-text">@Model.GetTypeOfEmployment(Model.Vacancies.FirstOrDefault(m => m.Id == 2).IdTypeOfEmployment) занятость</p>
                                </div>
                            </div>
                            <div class="stroka2">
                                <div class="vacancy1adddate">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 2).Salary руб.</p>
                                </div>
                                <div class="vacancy1companyname">
                                    <p class="vacancyinfo-text">@Model.Employers.FirstOrDefault(employer => employer.Id == (Model.Vacancies.FirstOrDefault(m => m.Id == 2).IdEmployer)).City.Name</p>
                                </div>
                            </div>
                        </div>
                        <div class="right">
                            <div class="btnaddresponse">
                                <form method="post">
                                    <script src="~/js/script.js" charset="utf-8"></script>
                                    <p>
                                        @if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id) != null)
                                        {
                                            if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id).Auth != 0 && Model.User.Role == "Соискатель")
                                            {
                                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == 2) == null)
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="CreateResponse('@Model.User.Id', '2');HappyMassage();" value="Откликнуться" />
                                                }
                                                else
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="Message()" value="Откликнуться" />
                                                }
                                            }
                                        }
                                    </p>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="vacancy3back" title="@Model.Vacancies.FirstOrDefault(m => m.Id == 3).Position — @Model.Vacancies.FirstOrDefault(m => m.Id == 3).Description — @Model.Vacancies.FirstOrDefault(m => m.Id == 3).Education образование.">
                        <div class="left">
                            <div class="vacancy1name">
                                <p class="vacancyname-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 3).Position</p>
                            </div>
                            <div class="stroka1">
                                <div class="vacancy1workexperience">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 3).WorkExperience @Model.GetYearNameInRussian(Model.Vacancies.FirstOrDefault(m => m.Id == 3).WorkExperience)</p>
                                </div>
                                <div class="vacancy1typeofemployment">
                                    <p class="vacancyinfo-text">@Model.GetTypeOfEmployment(Model.Vacancies.FirstOrDefault(m => m.Id == 3).IdTypeOfEmployment) занятость</p>
                                </div>
                            </div>
                            <div class="stroka2">
                                <div class="vacancy1adddate">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 3).Salary руб.</p>
                                </div>
                                <div class="vacancy1companyname">
                                    <p class="vacancyinfo-text">@Model.Employers.FirstOrDefault(employer => employer.Id == (Model.Vacancies.FirstOrDefault(m => m.Id == 3).IdEmployer)).City.Name</p>
                                </div>
                            </div>
                        </div>
                        <div class="right">
                            <div class="btnaddresponse">
                                <form method="post">
                                    <script src="~/js/script.js" charset="utf-8"></script>
                                    <p>
                                        @if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id) != null)
                                        {
                                            if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id).Auth != 0 && Model.User.Role == "Соискатель")
                                            {
                                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == 3) == null)
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="CreateResponse('@Model.User.Id', '3');HappyMassage();" value="Откликнуться" />
                                                }
                                                else
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="Message()" value="Откликнуться" />
                                                }
                                            }
                                        }
                                    </p>
                                </form>
                            </div>
                        </div>
                    </div>
                    
                    <div class="vacancy4back" title="@Model.Vacancies.FirstOrDefault(m => m.Id == 4).Position — @Model.Vacancies.FirstOrDefault(m => m.Id == 4).Description — @Model.Vacancies.FirstOrDefault(m => m.Id == 4).Education образование.">
                        <div class="left">
                            <div class="vacancy1name">
                                <p class="vacancyname-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 4).Position</p>
                            </div>
                            <div class="stroka1">
                                <div class="vacancy1workexperience">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 4).WorkExperience @Model.GetYearNameInRussian(Model.Vacancies.FirstOrDefault(m => m.Id == 4).WorkExperience)</p>
                                </div>
                                <div class="vacancy1typeofemployment">
                                    <p class="vacancyinfo-text">@Model.GetTypeOfEmployment(Model.Vacancies.FirstOrDefault(m => m.Id == 4).IdTypeOfEmployment) занятость</p>
                                </div>
                            </div>
                            <div class="stroka2">
                                <div class="vacancy1adddate">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 4).Salary руб.</p>
                                </div>
                                <div class="vacancy1companyname">
                                    <p class="vacancyinfo-text">@Model.Employers.FirstOrDefault(employer => employer.Id == (Model.Vacancies.FirstOrDefault(m => m.Id == 4).IdEmployer)).City.Name</p>
                                </div>
                            </div>
                        </div>
                        <div class="right">
                            <div class="btnaddresponse">
                                <form method="post">
                                    <script src="~/js/script.js" charset="utf-8"></script>
                                    <p>
                                        @if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id) != null)
                                        {
                                            if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id).Auth != 0 && Model.User.Role == "Соискатель")
                                            {
                                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == 4) == null)
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="CreateResponse('@Model.User.Id', '4');HappyMassage();" href="/Home/Index" value="Откликнуться" />
                                                }
                                                else
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="Message()" value="Откликнуться" />
                                                }
                                            }
                                        }
                                    </p>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="vacancy5back" title="@Model.Vacancies.FirstOrDefault(m => m.Id == 5).Position — @Model.Vacancies.FirstOrDefault(m => m.Id == 5).Description — @Model.Vacancies.FirstOrDefault(m => m.Id == 5).Education образование.">
                        <div class="left">
                            <div class="vacancy1name">
                                <p class="vacancyname-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 5).Position</p>
                            </div>
                            <div class="stroka1">
                                <div class="vacancy1workexperience">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 5).WorkExperience @Model.GetYearNameInRussian(Model.Vacancies.FirstOrDefault(m => m.Id == 5).WorkExperience)</p>
                                </div>
                                <div class="vacancy1typeofemployment">
                                    <p class="vacancyinfo-text">@Model.GetTypeOfEmployment(Model.Vacancies.FirstOrDefault(m => m.Id == 5).IdTypeOfEmployment) занятость</p>
                                </div>
                            </div>
                            <div class="stroka2">
                                <div class="vacancy1adddate">
                                    <p class="vacancyinfo-text">@Model.Vacancies.FirstOrDefault(m => m.Id == 5).Salary руб.</p>
                                </div>
                                <div class="vacancy1companyname">
                                    <p class="vacancyinfo-text">@Model.Employers.FirstOrDefault(employer => employer.Id == (Model.Vacancies.FirstOrDefault(m => m.Id == 5).IdEmployer)).City.Name</p>
                                </div>
                            </div>
                        </div>
                        <div class="right">
                            <div class="btnaddresponse">
                                <form method="post">
                                    <p>
                                        @if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id) != null)
                                        {
                                            if (Model.Accounts.LastOrDefault(m => m.IdUser == Model.User.Id).Auth != 0 && Model.User.Role == "Соискатель")
                                            {
                                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == 5) == null)
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="CreateResponse('@Model.User.Id', '5');HappyMassage();" value="Откликнуться" />
                                                }
                                                else
                                                {
                                                <input type="button" class="btn btn-outline-dark w-200" onclick="Message()" value="Откликнуться" />
                                                }
                                            }
                                        }
                                    </p>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="rightbar">
                <div class="meeting">
                    <a class="opvacancy-text">Встречи сегодня</a>
                </div>
                @{ string role = Model.User.Role;
                    Meeting meet = null;
                    if (role == "Соискатель")
                    {
                        meet = Model.Meetings.FirstOrDefault(m => m.IdResume == Model.User.Id && m.DateAndTime.Date == DateTime.Now.Date);
                    }
                    else
                    {
                        meet = Model.Meetings.FirstOrDefault(m => m.IdEmployer == Model.User.Id && m.DateAndTime.Date == DateTime.Now.Date);
                    }
                    }
                <a href="/Home/Meeting/@Model.User.Id"><img class="strelka" src="~/images/strelka.png" alt="Перейти" title="Перейти во встречи"></a>
                <div class="allmeetingback">
                    @if (role == "Соискатель")
                    {
                        <div class="left" title="@if (meet != null) { meet.DateAndTime.ToString("D"); } else { "Встреч на сегодня нет".ToString();}">
                            <div class="stroka">
                                <div class="photomeet">
                                    @if (meet != null)
                                    {
                                        <img src="~/images/user.png" class="mrtop8 mrleft32" alt="">
                                    }
                                </div>
                                <div class="timemeet">
                                    @if (meet != null)
                                    {
                                        <p class="mrtop16 mrleft32">@meet.DateAndTime.Hour:@meet.DateAndTime.Minute</p>
                                    }
                                    else
                                    {
                                        <p class="mrtop32 mrleft32">00:00</p>
                                    }
                                </div>
                            </div>
                            <div class="stroka">
                                <div class="namemeet">
                                    @if (meet != null)
                                    {
                                    <p>@meet.Employer.СompanyName - @meet.Employer.City.Name @meet.Employer.Street @meet.Employer.House @meet.Employer.Apartment</p>
                                    }
                                    else
                                    {
                                        <p>Сегодня встреч нет</p>
                                    }
                                </div>
                            </div>
                            <div class="descripmeet mrtop16 mrleft32 mrbottom16">
                                @if (meet != null)
                                {
                                    <p>Собеседование</p>
                                }
                                else
                                {
                                    <p>Возможно у вас назначены встречи на другие дни.</p>
                                }
                            </div>
                        </div>
                        <div class="rightdelmeet">
                            @if (meet != null)
                            {
                                @if (Model.User != null)
                                {
                                    <div class="mrtop8">
                                        <a class="btn btn-outline-dark w-200 mrright32" onclick="DeleteMeetingForSeekers('@Model.User.Id', '@meet.Id');DeleteMeetMassage();" id="deletemeeting">Отменить встречу</a>
                                    </div>
                                }
                            }
                        </div>
                    }
                    else
                    {
                        <div class="left" title="@if (meet != null) { meet.DateAndTime.ToString("D"); } else { "Встреч на сегодня нет".ToString();}">
                            <div class="stroka">
                                <div class="photomeet">
                                    @if (meet != null)
                                    {
                                        <img src="~/images/user.png" class="mrtop32 mrleft32" alt="">
                                    }
                                </div>
                                <div class="timemeet">
                                    @if (meet != null)
                                    {
                                        <p class="mrtop16 mrleft32">@meet.DateAndTime.Hour:@meet.DateAndTime.Minute</p>
                                    }
                                    else
                                    {
                                        <p class="mrtop32 mrleft32">00:00</p>
                                    }
                                </div>
                            </div>
                            <div class="stroka">
                                <div class="namemeet">
                                    @if (meet != null)
                                    {
                                    <p>@meet.Resume.LastName @meet.Resume.FirstName @meet.Resume.MiddleName</p>
                                    }
                                    else
                                    {
                                        <p>Сегодня встреч нет</p>
                                    }
                                </div>
                            </div>
                            <div class="descripmeet mrtop16 mrleft32 mrbottom32">
                                @if (meet != null)
                                {
                                    <p>Собеседование</p>
                                }
                                else
                                {
                                    <p>Возможно у вас назначены встречи на другие дни.</p>
                                }
                            </div>
                        </div>
                        <div class="rightdelmeet">
                            @if (meet != null)
                            {
                                @if (Model.User != null)
                                {
                                    <div class="mrtop8">
                                        <a class="btn btn-outline-dark w-200 mrright32" onclick="DeleteMeetingForEmployers('@Model.User.Id', '@meet.Id');DeleteMeetMassage();" id="deletemeeting">Отменить встречу</a>
                                    </div>
                                }
                            }
                        </div>
                    }

                </div>

                <div class="resume mrtop32">
                    <a class="opvacancy-text" href="/Home/Resume/@Model.User.Id">Базы резюме <img class="strelka" src="~/images/strelka.png" alt="Перейти" title="Перейти в резюме"></a>
                </div>
                <a href="/Home/Resume/@Model.User.Id"></a>
                <div class="allresume mrtop16">
                    <div class="resume1back mrright16">
                        <div class="strokaresume">
                            <img src="~/images/resume1.png" class="mrtop32 mrleft32 mrright16" alt="">
                        </div>
                        @{var resumes = Model.Resumes.Where(m => m.ItsPublic == true); Random randomResume1 = new Random(); int rndResume1 = randomResume1.Next(1, resumes.Count());}
                        <div class="resumeinfo">
                            <p class="mrbottom8 font-bolder">@resumes.ElementAtOrDefault(rndResume1).Position</p>
                            <p>@resumes.Count(m => m.Position == resumes.ElementAtOrDefault(rndResume1).Position) резюме</p>
                        </div>
                    </div>
                    <div class="resume2back">
                        <div class="strokaresume">
                            <img src="~/images/resume2.png" class="mrtop24 mrleft32 mrright16" alt="">
                        </div>
                        @{var resumes2 = Model.Resumes.Where(m => m.ItsPublic == true); Random randomResume2 = new Random(); int rndResume2 = randomResume2.Next(1, resumes2.Count());
                            do { rndResume2 = randomResume2.Next(1, resumes2.Count()); } while (rndResume2 == rndResume1);}
                        <div class="resumeinfo">
                            <p class="mrbottom8 font-bolder">@resumes.ElementAtOrDefault(rndResume1).Position</p>
                            <p>@resumes.Count(m => m.Position == resumes.ElementAtOrDefault(rndResume1).Position) резюме</p>
                        </div>
                    </div>
                </div>

                <div class="article mrtop32">
                    <a class="opvacancy-text" href="/Home/Article/@Model.User.Id">Сообщество</a>
                </div>
                <a href="/Home/Article/@Model.User.Id"><img class="strelka" src="~/images/strelka.png" alt="Перейти" title="Перейти в сообщество"></a>
                <div class="allarticle mrtop16">
                    @{Random randomArticle1 = new Random(); int rndArticle1 = randomArticle1.Next(1, Model.Articles.Count());}
                    <div class="article1back mrright16 mrtop20 mrleft28">
                        <img src="@Model.Articles.FirstOrDefault(m => m.Id == rndArticle1).Photo" class="articleimg" alt="">
                        <p class="article-text font-bolder mrleft16 mrtop-50">@Model.Articles.FirstOrDefault(m => m.Id == rndArticle1).Name</p>
                    </div>
                    @{Random randomArticle2 = new Random(); int rndArticle2 = randomArticle2.Next(1, Model.Articles.Count());
                        do { rndArticle2 = randomArticle2.Next(1, Model.Articles.Count()); } while (rndArticle2 == rndArticle1);}
                    <div class="article2back mrtop20">
                        <img src="@Model.Articles.FirstOrDefault(m => m.Id == rndArticle2).Photo" class="articleimg" alt="">
                        <p class="article-text font-bolder mrleft16 mrtop-50">@Model.Articles.FirstOrDefault(m => m.Id == rndArticle2).Name</p>
                    </div>
                </div>
            </div>
        </div>
        <footer class="backwhite">
            <div class="firstline">
                <div class="aboutus mrtop32">
                    <div class="aboutuss">
                        <a href="#" class="font16 fontbold">О нас</a>
                    </div>
                    <div class="aboutuscontext">
                        <a href="#" class="font16 fontregular">О сервисе</a> <br><br>
                        <a href="#" class="font16 fontregular">Пользовательское соглашение</a> <br><br>
                        <a href="#" class="font16 fontregular">Политика конфиденциальности</a> <br><br>
                    </div>
                </div>

                <div class="support mrtop32">
                    <div class="supportt">
                        <a href="" class="font16 fontbold">Поддержка</a>
                    </div>
                    <div class="devicescontext">
                        <a href="#" class="font16 fontregular">support@recruterra.ru</a> <br> <br>
                        <a href="#" class="font16 fontregular">8 (905) 020-99-52</a> <br><br>
                        <a href="#" class="font16 fontregular">FAQ</a> <br><br>
                    </div>
                </div>

                <div class="SocSeti mrtop32">
                    <div class="SocSetii">
                        <a href="#" class="font16 fontbold">Наши соц.сети</a>
                    </div>
                    <div class="SocSeticontext">
                        <a href="https://www.instagram.com/ar.gelick/"><img src="~/images/instagram.png" alt=""></a>
                        <a href="https://twitter.com/?lang=ru"><img src="~/images/twitter.png" alt=""></a>
                        <a href="https://www.facebook.com/"><img src="~/images/facebook.png" alt=""></a>
                        <a href="https://t.me/kurechh"><img src="~/images/telegram.png" alt=""></a>
                    </div>
                </div>
            </div>
            <div class="copy">
                <table class="iksweb">
                    <tbody>
                        <tr>
                            <td><a href="" class="font36">Recruterra</a></td>
                            <td class="copyright"><a href="" class="copyright">© 2023</a></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </footer>
    </main>
</body>
</html>