@model IndexData

@{
    ViewBag.Title = "Recruterra - Сводка";
}

<header>
    <nav class="navbar navbar-expand-lg navbar-light media-header-true">
        <div class="container d-flex justify-content-center ">
            @if (Model.User != null)
            {
                <a class="nav-link font-24 fontbold color-green" href="/Home/Index">Recruterra</a>
                <a class="nav-link font-24 fontbold color-green dropbtn" onclick="menuDropDown()">&#9776;</a>
                <div id="myDropdown" class="dropdown-content">
                    <a href="/Home/Index" class="color-green">Сводка</a>
                    <a href="/Home/Vacancy" class="color-2c2c2c">Вакансии</a>
                    <a href="/Home/Meeting" class="color-2c2c2c">Встречи</a>
                    <a href="/Home/Resume" class="color-2c2c2c">Резюме</a>
                    <a href="/Home/Article" class="color-2c2c2c">Сообщество</a>
                    <a href="/Settings/Account" class="color-2c2c2c">Профиль</a>
                    <a class="color-green" onclick="UpdateAccount()">Выйти</a>
                </div>
            }
            else
            {
                <a class="nav-link font-24 fontbold color-green" href="/Home/Index">Recruterra</a>
                <a class="nav-link font-24 fontbold color-green dropbtn" onclick="menuDropDown2()">&#9776;</a>
                <div id="myDropdown2" class="dropdown-content">
                    <a href="/Access/Signin" class="color-green">Войти</a>
                </div>
            }
        </div>
    </nav>

    <nav class="navbar navbar-expand-lg navbar-light media-header">
        <div class="container d-flex justify-content-center ">
            <ul class="navbar-nav mr-auto d-flex justify-content-center align-items-center">
                @if (Model.User != null)
                {
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="nav-link font-24 fontbold color-green" href="/Home/Index">Recruterra</a>
                    </li>
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="nav-link font-18 fontbold color-green" href="/Home/Index">Сводка</a>
                    </li>
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="nav-link font-18 fontbold color-black color-green-hover" href="/Home/Vacancy">Вакансии</a>
                    </li>
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="nav-link font-18 fontbold color-black color-green-hover" href="/Home/Meeting">Встречи</a>
                    </li>
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="nav-link font-18 fontbold color-black color-green-hover" href="/Home/Resume">Резюме</a>
                    </li>
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="nav-link font-18 fontbold color-black color-green-hover"
                           href="/Home/Article">Сообщество</a>
                    </li>
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="nav-link font-18 fontbold color-black color-green-hover" href="/Settings/Account">Профиль</a>
                    </li>
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="btn btn-outline-primary nav-link font-18 font-bolder color-black cursor-pointer" onclick="UpdateAccount()">Выйти</a>
                    </li>
                }
                else
                {
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="nav-link font-24 fontbold color-green" href="/Home/Index">Recruterra</a>
                    </li>
                    <li class="nav-item mr-right-1dot6percent">
                        <a class="btn btn-outline-primary nav-link font-18 font-bolder color-black" href="/Access/Signin">Войти</a>
                    </li>
                }
            </ul>
        </div>
    </nav>
</header>

<div class="container justify-content-center mrtop16 dd-flex">
    <div class="summary-left">
        <div class="d-flex align-items-bottom cursor-pointer">
            @if (Model.User != null)
            {
                <a class="font-24 fontbold mrbottom8 mr-right-1dot6percent color-2c2c2c color-green-hover"
                   href="/Home/Vacancy" title="Страница со всеми вакансиями">Вакансии</a>
            }
            else
            {
                <a class="font-24 fontbold mrbottom8 mr-right-1dot6percent color-2c2c2c color-green-hover" title="Страница со всеми вакансиями">Вакансии</a>
            }

            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="18" class="svg">
                <path fill="currentColor"
                      d="M5.293 12.293a1 1 0 1 0 1.414 1.414l5-5a1 1 0 0 0 0-1.414l-5-5a1 1 0 0 0-1.414 1.414L9.586 8l-4.293 4.293Z">
                </path>
            </svg>
        </div>
        <div class="summary-allvacancyback">
            @{ List<Vacancy> defaultVacancies = new List<Vacancy>();
                defaultVacancies = Model.Vacancies.Where(q => q.IsActive == true).OrderByDescending(a => a.Id).ToList();}
            <div class="summary-vacancy-back mrbottom8 align-items-center">
                <div class="summary-vacancy-left">
                    <a class="fontbold color-2c2c2c cursor-default" title="Должность">@defaultVacancies.ElementAt(0).Position</a>
                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent cursor-default" title="Требуемый опыт работы">@defaultVacancies.ElementAt(0).WorkExperience @Model.GetYearNameInRussian(defaultVacancies.ElementAt(0).WorkExperience)</p>
                        <p class="cursor-default" title="Тип занятости">@Model.GetTypeOfEmployment(defaultVacancies.ElementAt(0).IdTypeOfEmployment)</p>
                    </div>

                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent cursor-default" title="Заработная плата">@defaultVacancies.ElementAt(0).Salary руб.</p>
                        <p class="cursor-default" title="Город">@Model.Employers.FirstOrDefault(employer => employer.Id == (defaultVacancies.ElementAt(0).IdEmployer)).City.Name</p>
                    </div>
                </div>
                <div class="summary-vacancy-right">
                    @if (Model.User != null)
                    {
                        if (Model.User.Role == "Соискатель")
                        {
                            if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(0).Id) != null)
                            {
                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(0).Id).IsAccepted == 0)
                                {
                                    <a class="font-18 color-2c2c2c">Отправлен</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(0).Id).IsAccepted == 1)
                                {
                                    <a class="font-18 color-green">Принят</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(0).Id).IsAccepted == 2)
                                {
                                    <a class="font-18 color-red">Отклонен</a>
                                }
                            }
                            else
                            {
                                var resume = Model.Resumes.FirstOrDefault(r => r.Id == Model.User.Id);
                                if (resume.LastName != null && resume.FirstName != null && resume.MiddleName != null && resume.Gender != null && resume.Photo != null && resume.DateOfBirth != null && resume.PhoneNumber != null && resume.IdCity != null && resume.IdCitizenship != null && resume.Position != null && resume.Salary != null && resume.Education != null && resume.University != null && resume.WorkExperience != null && resume.IdTypeOfEmployment != null && resume.AdditionalInformation != null)
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateFakeResponse();">Отклик</a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateResponse('@Model.User.Id', '@defaultVacancies.ElementAt(0).Id');">Отклик</a>
                                }
                            }
                        }
                    }
                </div>
            </div>

            <div class="summary-vacancy-back mrbottom8 d-flex align-items-center">
                <div class="summary-vacancy-left">
                    <a class="fontbold color-2c2c2c cursor-default" title="Должность">@defaultVacancies.ElementAt(1).Position</a>
                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent cursor-default" title="Требуемый опыт работы">@defaultVacancies.ElementAt(1).WorkExperience @Model.GetYearNameInRussian(defaultVacancies.ElementAt(1).WorkExperience)</p>
                        <p class="cursor-default" title="Тип занятости">@Model.GetTypeOfEmployment(defaultVacancies.ElementAt(1).IdTypeOfEmployment)</p>
                    </div>

                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent cursor-default" title="Заработная плата">@defaultVacancies.ElementAt(1).Salary руб.</p>
                        <p class="cursor-default" title="Город">@Model.Employers.FirstOrDefault(employer => employer.Id == (defaultVacancies.ElementAt(1).IdEmployer)).City.Name</p>
                    </div>
                </div>
                <div class="summary-vacancy-right">
                    @if (Model.User != null)
                    {
                        if (Model.User.Role == "Соискатель")
                        {
                            if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(1).Id) != null)
                            {
                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(1).Id).IsAccepted == 0)
                                {
                                    <a class="font-18 color-2c2c2c">Отправлен</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(1).Id).IsAccepted == 1)
                                {
                                    <a class="font-18 color-green">Принят</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(1).Id).IsAccepted == 2)
                                {
                                    <a class="font-18 color-red">Отклонен</a>
                                }
                            }
                            else
                            {
                                var resume = Model.Resumes.FirstOrDefault(r => r.Id == Model.User.Id);
                                if (resume.LastName != null && resume.FirstName != null && resume.MiddleName != null && resume.Gender != null && resume.Photo != null && resume.DateOfBirth != null && resume.PhoneNumber != null && resume.IdCity != null && resume.IdCitizenship != null && resume.Position != null && resume.Salary != null && resume.Education != null && resume.University != null && resume.WorkExperience != null && resume.IdTypeOfEmployment != null && resume.AdditionalInformation != null)
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateFakeResponse();">Отклик</a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateResponse('@Model.User.Id', '@defaultVacancies.ElementAt(1).Id');">Отклик</a>
                                }
                            }
                        }
                    }
                </div>
            </div>

            <div class="summary-vacancy-back mrbottom8 d-flex align-items-center">
                <div class="summary-vacancy-left">
                    <a class="fontbold color-2c2c2c cursor-default" title="Должность">@defaultVacancies.ElementAt(2).Position</a>
                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent cursor-default" title="Требуемый опыт работы">@defaultVacancies.ElementAt(2).WorkExperience @Model.GetYearNameInRussian(defaultVacancies.ElementAt(2).WorkExperience)</p>
                        <p class="cursor-default" title="Тип занятости">@Model.GetTypeOfEmployment(defaultVacancies.ElementAt(2).IdTypeOfEmployment)</p>
                    </div>

                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent cursor-default" title="Заработная плата">@defaultVacancies.ElementAt(2).Salary руб.</p>
                        <p class="cursor-default" title="Город">@Model.Employers.FirstOrDefault(employer => employer.Id == (defaultVacancies.ElementAt(2).IdEmployer)).City.Name</p>
                    </div>
                </div>
                <div class="summary-vacancy-right">
                    @if (Model.User != null)
                    {
                        if (Model.User.Role == "Соискатель")
                        {
                            if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(2).Id) != null)
                            {
                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(2).Id).IsAccepted == 0)
                                {
                                    <a class="font-18 color-2c2c2c">Отправлен</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(2).Id).IsAccepted == 1)
                                {
                                    <a class="font-18 color-green">Принят</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(2).Id).IsAccepted == 2)
                                {
                                    <a class="font-18 color-red">Отклонен</a>
                                }
                            }
                            else
                            {
                                var resume = Model.Resumes.FirstOrDefault(r => r.Id == Model.User.Id);
                                if (resume.LastName != null && resume.FirstName != null && resume.MiddleName != null && resume.Gender != null && resume.Photo != null && resume.DateOfBirth != null && resume.PhoneNumber != null && resume.IdCity != null && resume.IdCitizenship != null && resume.Position != null && resume.Salary != null && resume.Education != null && resume.University != null && resume.WorkExperience != null && resume.IdTypeOfEmployment != null && resume.AdditionalInformation != null)
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateFakeResponse();">Отклик</a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateResponse('@Model.User.Id', '@defaultVacancies.ElementAt(2).Id');">Отклик</a>
                                }
                            }
                        }
                    }
                </div>
            </div>

            <div class="summary-vacancy-back mrbottom8 d-flex align-items-center">
                <div class="summary-vacancy-left">
                    <a class="fontbold color-2c2c2c cursor-pointer" title="Должность">@defaultVacancies.ElementAt(3).Position</a>
                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent" title="Требуемый опыт работы">@defaultVacancies.ElementAt(3).WorkExperience @Model.GetYearNameInRussian(defaultVacancies.ElementAt(3).WorkExperience)</p>
                        <p title="Тип занятости">@Model.GetTypeOfEmployment(defaultVacancies.ElementAt(3).IdTypeOfEmployment)</p>
                    </div>

                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent" title="Заработная плата">@defaultVacancies.ElementAt(3).Salary руб.</p>
                        <p title="Город">@Model.Employers.FirstOrDefault(employer => employer.Id == (defaultVacancies.ElementAt(3).IdEmployer)).City.Name</p>
                    </div>
                </div>
                <div class="summary-vacancy-right">
                    @if (Model.User != null)
                    {
                        if (Model.User.Role == "Соискатель")
                        {
                            if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(3).Id) != null)
                            {
                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(3).Id).IsAccepted == 0)
                                {
                                    <a class="font-18 color-2c2c2c">Отправлен</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(3).Id).IsAccepted == 1)
                                {
                                    <a class="font-18 color-green">Принят</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(3).Id).IsAccepted == 2)
                                {
                                    <a class="font-18 color-red">Отклонен</a>
                                }
                            }
                            else
                            {
                                var resume = Model.Resumes.FirstOrDefault(r => r.Id == Model.User.Id);
                                if (resume.LastName != null && resume.FirstName != null && resume.MiddleName != null && resume.Gender != null && resume.Photo != null && resume.DateOfBirth != null && resume.PhoneNumber != null && resume.IdCity != null && resume.IdCitizenship != null && resume.Position != null && resume.Salary != null && resume.Education != null && resume.University != null && resume.WorkExperience != null && resume.IdTypeOfEmployment != null && resume.AdditionalInformation != null)
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateFakeResponse();">Отклик</a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateResponse('@Model.User.Id', '@defaultVacancies.ElementAt(3).Id');">Отклик</a>
                                }
                            }
                        }
                    }
                </div>
            </div>

            <div class="summary-vacancy-back mrbottom8 d-flex align-items-center">
                <div class="summary-vacancy-left">
                    <a class="fontbold color-2c2c2c cursor-pointer" title="Должность">@defaultVacancies.ElementAt(4).Position</a>
                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent" title="Требуемый опыт работы">@defaultVacancies.ElementAt(4).WorkExperience @Model.GetYearNameInRussian(defaultVacancies.ElementAt(4).WorkExperience)</p>
                        <p title="Тип занятости">@Model.GetTypeOfEmployment(defaultVacancies.ElementAt(4).IdTypeOfEmployment)</p>
                    </div>

                    <div class="media-wrap-text">
                        <p class="mr-right-1dot6percent" title="Заработная плата">@defaultVacancies.ElementAt(4).Salary руб.</p>
                        <p title="Город">@Model.Employers.FirstOrDefault(employer => employer.Id == (defaultVacancies.ElementAt(4).IdEmployer)).City.Name</p>
                    </div>
                </div>
                <div class="summary-vacancy-right">
                    @if (Model.User != null)
                    {
                        if (Model.User.Role == "Соискатель")
                        {
                            if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(4).Id) != null)
                            {
                                if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(4).Id).IsAccepted == 0)
                                {
                                    <a class="font-18 color-2c2c2c">Отправлен</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(4).Id).IsAccepted == 1)
                                {
                                    <a class="font-18 color-green">Принят</a>
                                }
                                else if (Model.Responses.FirstOrDefault(m => m.IdUser == Model.User.Id && m.IdVacancy == defaultVacancies.ElementAt(4).Id).IsAccepted == 2)
                                {
                                    <a class="font-18 color-red">Отклонен</a>
                                }
                            }
                            else
                            {
                                var resume = Model.Resumes.FirstOrDefault(r => r.Id == Model.User.Id);
                                if (resume.LastName != null && resume.FirstName != null && resume.MiddleName != null && resume.Gender != null && resume.Photo != null && resume.DateOfBirth != null && resume.PhoneNumber != null && resume.IdCity != null && resume.IdCitizenship != null && resume.Position != null && resume.Salary != null && resume.Education != null && resume.University != null && resume.WorkExperience != null && resume.IdTypeOfEmployment != null && resume.AdditionalInformation != null)
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateFakeResponse();">Отклик</a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-primary font-18 color-2c2c2c cursor-pointer" onclick="CreateResponse('@Model.User.Id', '@defaultVacancies.ElementAt(4).Id');">Отклик</a>
                                }
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="summary-right">
        <div class="d-flex align-items-bottom cursor-pointer">
            @if (Model.User != null)
            {
                <a href="/Home/Meeting" class="font-24 fontbold mrbottom8 mr-right-1dot6percent media-mrtop color-2c2c2c color-green-hover" title="Страница встреч">
                    Встречи
                    сегодня
                </a>
            }
            else
            {
                <a class="font-24 fontbold mrbottom8 mr-right-1dot6percent media-mrtop color-2c2c2c color-green-hover" title="Страница встреч">
                    Встречи
                    сегодня
                </a>
            }
            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="18" class="svg">
                <path fill="currentColor"
                      d="M5.293 12.293a1 1 0 1 0 1.414 1.414l5-5a1 1 0 0 0 0-1.414l-5-5a1 1 0 0 0-1.414 1.414L9.586 8l-4.293 4.293Z">
                </path>
            </svg>
        </div>
        @{ string role = Model.User != null ? Model.User.Role : string.Empty;
            Meeting meet = new Meeting();
            if (role == "Соискатель")
            {
                meet = Model.Meetings.FirstOrDefault(m => m.IdResume == Model.User.Id && m.DateAndTime.Date == DateTime.Now.Date);
            }
            else if (role == "Работодатель")
            {
                meet = Model.Meetings.FirstOrDefault(m => m.IdEmployer == Model.User.Id && m.DateAndTime.Date == DateTime.Now.Date);
            }
        }
        <div class="summary-meetings">
            <div class="summary-meeting-back">
                <div class="d-flex align-items-center">
                    @if (role == "Соискатель" && meet != null)
                    {
                        Employer employer = Model.Employers.FirstOrDefault(e => e.Id == meet.IdEmployer);
                        <p class="mr-right-1dot6percent font-bolder mrleft16">@meet.DateAndTime.ToString("t")</p>
                        <div class="w-100">
                            <p title="Название компании и адрес встречи">@employer.CompanyName - @employer.City.Name @employer.Street/@employer.House/@employer.Apartment</p>
                        </div>
                    }
                    else if (role == "Работодатель" && meet != null)
                    {
                        Resume seeker = Model.Resumes.FirstOrDefault(s => s.Id == meet.IdResume);
                        <p class="mr-right-1dot6percent font-bolder mrleft16">@meet.DateAndTime.ToString("t")</p>
                        <p class="mr-right-1dot6percent">@seeker.LastName @seeker.FirstName</p>
                    }
                    else
                    {
                        <div class="summary-meeting-left d-flex align-items-center">
                            @if (Model.User != null)
                            { 
                                <p class="mr-right-1dot6percent color-2c2c2c font-bolder mrleft16">На сегодня нет встреч</p>
                                <a href="/Home/Meeting" class="color-green-hover color-2c2c2c cursor-pointer">Все встречи</a>
                            }
                            else
                            { 
                                <p class="mr-right-1dot6percent color-2c2c2c font-bolder mrleft16">Доступ к встречам после <a href="/Access/Signin" class="hover-underline">авторизации</a></p>
                            }
                        </div>
                    }

                </div>
            </div>
        </div>

        <div class="d-flex align-items-bottom cursor-pointer">
            @if (Model.User != null)
            {
                <a href="/Home/Resume" class="font-24 fontbold mrtop16 mrbottom8 mr-right-1dot6percent color-2c2c2c color-green-hover" title="Страница всех открых резюме">Резюме</a>
            }
            else
            {
                <a class="font-24 fontbold mrtop16 mrbottom8 mr-right-1dot6percent color-2c2c2c color-green-hover" title="Страница всех открых резюме">Резюме</a>
            }
            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="18" class="svg">
                <path fill="currentColor"
                      d="M5.293 12.293a1 1 0 1 0 1.414 1.414l5-5a1 1 0 0 0 0-1.414l-5-5a1 1 0 0 0-1.414 1.414L9.586 8l-4.293 4.293Z">
                </path>
            </svg>
        </div>
        <div class="summary-resumes d-flex align-items-center">
            @{List<Resume> latestResumes = new List<Resume>();
                latestResumes = Model.Resumes.Where(q => q.ItsPublic == true).OrderByDescending(o => o.Id).ToList();}
            <div class="summary-resume-1">
                <p class="mr-right-1dot6percent font-bolder mrleft16">@latestResumes.ElementAt(0).Position</p>
                <p class="mrleft16">@Model.Resumes.Count(r => r.Position == latestResumes.ElementAt(0).Position) резюме</p>
            </div>
            <div class="summary-resume-2">
                <p class="mr-right-1dot6percent font-bolder mrleft16">@latestResumes.ElementAt(1).Position</p>
                <p class="mrleft16">@Model.Resumes.Count(r => r.Position == latestResumes.ElementAt(1).Position) резюме</p>
            </div>
        </div>

        <div class="d-flex align-items-bottom cursor-pointer">
            @if (Model.User != null)
            {
                <a href="/Home/Article" class="font-24 fontbold mrtop16 mrbottom8 mr-right-1dot6percent color-2c2c2c color-green-hover" title="Страница сообщества">Сообщество</a>
            }
            else
            {
                <a class="font-24 fontbold mrtop16 mrbottom8 mr-right-1dot6percent color-2c2c2c color-green-hover" title="Страница сообщества">Сообщество</a>
            }
            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="18" class="svg">
                <path fill="currentColor"
                      d="M5.293 12.293a1 1 0 1 0 1.414 1.414l5-5a1 1 0 0 0 0-1.414l-5-5a1 1 0 0 0-1.414 1.414L9.586 8l-4.293 4.293Z">
                </path>
            </svg>
        </div>

        <div class="summary-community d-flex">
            @{List<Article> latestArticles = new List<Article>();
                latestArticles = Model.Articles.OrderByDescending(o => o.Id).ToList();}
            <div class="summary-community-1 mr-right-1dot6percent align-items-end">
                <p class="font-bolder">@latestArticles.ElementAt(0).Name</p>
                <img src="@latestArticles.ElementAt(0).Photo" class="w-100 h-170px mrtop8">
            </div>
            <div class="summary-community-2 align-items-end">
                <p class="font-bolder">@latestArticles.ElementAt(1).Name</p>
                <img src="@latestArticles.ElementAt(1).Photo" class="w-100 h-170px mrtop8">
            </div>
        </div>
    </div>
</div>